import{r as $,_ as O}from"./Radio.wsTlfoop.js";import{_ as k,ac as R,ad as l,g as z,af as b,W as u,a9 as B,k as U,o as r,c as i,a as j,y,A as v,d as w,t as F,z as G,F as N,n as I,s as L,w as P,L as A,M as C,aI as o}from"./entry.RTXGjyIc.js";import{u as T}from"./useFormGroup.jbsocUPW.js";import"./uid.KLLbMoZc.js";const D={wrapper:"relative flex items-start",legend:"text-sm font-medium text-gray-700 dark:text-gray-200 mb-1",default:{color:"primary"}},d=R(l.ui.strategy,l.ui.radioGroup,D),E=R(l.ui.strategy,l.ui.radio,$),M=z({components:{URadio:O},inheritAttrs:!1,props:{modelValue:{type:[String,Number,Object],default:""},name:{type:String,default:null},legend:{type:String,default:null},options:{type:Array,default:()=>[]},optionAttribute:{type:String,default:"label"},valueAttribute:{type:String,default:"value"},disabled:{type:Boolean,default:!1},color:{type:String,default:()=>d.default.color,validator(e){return l.ui.colors.includes(e)}},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},uiRadio:{type:Object,default:()=>({})}},emits:["update:modelValue","change"],setup(e,{emit:n}){const{ui:m,attrs:c}=b("radioGroup",u(e,"ui"),d,u(e,"class")),{ui:g}=b("radio",u(e,"uiRadio"),E),{emitFormChange:f,color:s,name:t}=T(e,d);B("radio-group",{color:s,name:t});const p=a=>{n("update:modelValue",a),n("change",a),f()},S=a=>o(a,e.valueAttribute,o(a,e.optionAttribute)),h=a=>o(a,e.optionAttribute,o(a,e.valueAttribute)),V=a=>["string","number","boolean"].includes(typeof a)?{value:a,label:a}:{...a,value:S(a),label:h(a)},_=U(()=>e.options.map(a=>V(a)));return{ui:m,uiRadio:g,attrs:c,normalizedOptions:_,onUpdate:p}}});function W(e,n,m,c,g,f){const s=O;return r(),i("div",{class:y(e.ui.wrapper)},[j("fieldset",A(C(e.attrs)),[e.legend||e.$slots.legend?(r(),i("legend",{key:0,class:y(e.ui.legend)},[v(e.$slots,"legend",{},()=>[w(F(e.legend),1)])],2)):G("",!0),(r(!0),i(N,null,I(e.normalizedOptions,t=>(r(),L(s,{key:t.value,label:t.label,"model-value":e.modelValue,value:t.value,disabled:t.disabled||e.disabled,ui:e.uiRadio,onChange:p=>e.onUpdate(t.value)},{label:P(()=>[v(e.$slots,"label",A(C({option:t})))]),_:2},1032,["label","model-value","value","disabled","ui","onChange"]))),128))],16)],2)}const Q=k(M,[["render",W]]);export{Q as default};
