import{_ as N,ac as T,aN as $,ad as f,g as q,af as A,W as B,r as z,au as F,h as C,S as H,J as R,k as D,ak as J,al as E,o as G,c as K,a as P,V as U,A as W,y as L,aK as Q}from"./entry.RTXGjyIc.js";import{u as X}from"./useFormGroup.jbsocUPW.js";import"./uid.KLLbMoZc.js";const o=T(f.ui.strategy,f.ui.textarea,$),Y=q({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator(e){return Object.keys(o.size).includes(e)}},color:{type:String,default:()=>o.default.color,validator(e){return[...f.ui.colors,...Object.keys(o.color)].includes(e)}},variant:{type:String,default:()=>o.default.variant,validator(e){return[...Object.keys(o.variant),...Object.values(o.color).flatMap(t=>Object.keys(t))].includes(e)}},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur"],setup(e,{emit:t}){const{ui:l,attrs:c}=A("textarea",B(e,"ui"),o,B(e,"class")),{emitFormBlur:m,emitFormInput:p,inputId:u,color:g,size:v,name:I}=X(e,o),n=z(F({},e.modelModifiers,{trim:!1,lazy:!1,number:!1})),r=z(null),y=()=>{var a;e.autofocus&&((a=r.value)==null||a.focus())},d=()=>{if(e.autoresize){if(!r.value)return;r.value.rows=e.rows;const a=window.getComputedStyle(r.value),s=parseInt(a.paddingTop),i=parseInt(a.paddingBottom),O=s+i,V=parseInt(a.lineHeight),{scrollHeight:M}=r.value,w=(M-O)/V;w>e.rows&&(r.value.rows=w)}},b=a=>{n.value.trim&&(a=a.trim()),n.value.number&&(a=Q(a)),t("update:modelValue",a),p()},S=a=>{d(),n.value.lazy||b(a.target.value)},h=a=>{const s=a.target.value;n.value.lazy&&b(s),n.value.trim&&(a.target.value=s.trim())},k=a=>{t("blur",a),m()};C(()=>{setTimeout(()=>{y()},e.autofocusDelay)}),H(()=>e.modelValue,()=>{R(d)}),C(()=>{setTimeout(()=>{y(),d()},100)});const j=D(()=>{var s,i;const a=((i=(s=l.value.color)==null?void 0:s[g.value])==null?void 0:i[e.variant])||l.value.variant[e.variant];return J(E(l.value.base,l.value.form,l.value.rounded,l.value.placeholder,l.value.size[v.value],e.padded?l.value.padding[v.value]:"p-0",a==null?void 0:a.replaceAll("{color}",g.value),!e.resize&&"resize-none"),e.textareaClass)});return{ui:l,attrs:c,name:I,inputId:u,textarea:r,textareaClass:j,onInput:S,onChange:h,onBlur:k}}}),Z=["id","value","name","rows","required","disabled","placeholder"];function x(e,t,l,c,m,p){return G(),K("div",{class:L(e.ui.wrapper)},[P("textarea",U({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:t[0]||(t[0]=(...u)=>e.onInput&&e.onInput(...u)),onBlur:t[1]||(t[1]=(...u)=>e.onBlur&&e.onBlur(...u)),onChange:t[2]||(t[2]=(...u)=>e.onChange&&e.onChange(...u))}),null,16,Z),W(e.$slots,"default")],2)}const te=N(Y,[["render",x]]);export{te as default};
